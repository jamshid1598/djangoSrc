"""
Django settings for projectroot project.

Generated by 'django-admin startproject' using Django 3.1.6.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

from pathlib import Path
from decouple import config

secret_key = config('SECRET_KEY', default='')
debug=config('DEBUG', cast=bool, default=True)

db_name = config('DB_NAME', default='db.sqlite3')
db_port = config('DB_PORT', cast=int, default='5432')
db_user = config('DB_USER', default='postgres')
db_password = config('DB_PASSWORD', default='')
db_engine = config('DB_ENGINE', default='django.db.backends.sqlite3')


email_backend       = config("EMAIL_BACKEND", default='django.core.mail.backends.smtp.EmailBackend')
email_use_tls       = config("EMAIL_USE_TLS", cast=bool, default=True)
email_host          = config("EMAIL_HOST", default='smtp.gmail.com')
email_host_user     = config("EMAIL_HOST_USER", default='dovurovjamshid95@gmail.com')
email_host_password = config("EMAIL_HOST_PASSWORD")
email_port          = config("EMAIL_PORT", cast=int, default=587)


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = secret_key

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = debug

ALLOWED_HOSTS = []

#  tinymce configuration
TINYMCE_DEFAULT_CONFIG = {
    'height': 400, 
    'width': 800, 
    'cleanup_on_startup': True, 
    'custom_undo_redo_levels': 20, 
    'selector': 'textarea', 
    'theme': 'modern', 
    'plugins': ''' textcolor save link image media preview codesample contextmenu 
                   table code lists fullscreen insertdatetime nonbreaking contextmenu 
                   directionality searchreplace wordcount visualblocks visualchars 
                   code fullscreen autolink lists charmap print hr anchor pagebreak ''', 
    'toolbar1': ''' fullscreen preview bold italic underline | fontselect, fontsizeselect | 
                    forecolor backcolor | alignleft alignright | aligncenter alignjustify | 
                    indent outdent | bullist numlist table | | link image media | codesample | ''', 
    'toolbar2': ''' visualblocks visualchars | charmap hr pagebreak nonbreaking anchor | code | ''', 
    'contextmenu': 'formats | link image', 
    'menubar': True, 
    'statusbar': True, 
}

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    
    'rest_framework', # django-rest-framework
    'tinymce',
    'phonenumber_field',
    'smart_selects',
    'import_export',
    
    'apps.blog.apps.BlogConfig',
    'apps.core.apps.CoreConfig',
    'apps.drf_django.apps.DrfDjangoConfig',
    'apps.signals_django.apps.SignalsDjangoConfig',
    'apps.users.apps.UsersConfig',
    'apps.django_import_export.apps.DjangoImportExportConfig',
    'apps.django_celery.apps.DjangoCeleryConfig',
]

AUTH_USER_MODEL = 'users.CustomUserModel'

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'projectroot.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'projectroot.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': db_engine,
        'NAME': BASE_DIR / db_name,
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly',
    ]
}



# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Tashkent'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = BASE_DIR / 'static_root/'

staticfiles_dirs = BASE_DIR / 'static/'
STATICFILES_DIRS = [
    staticfiles_dirs,
]

MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media_root'


# smpt gmail stuff
EMAIL_BACKEND       = email_backend
EMAIL_USE_TLS       = email_use_tls
EMAIL_HOST          = email_host
EMAIL_HOST_USER     = email_host_user
EMAIL_HOST_PASSWORD = email_host_password
EMAIL_PORT          = email_port

# CELERY STUFF
BROKER_URL               = 'redis://127.0.0.1:6379'
CELERY_RESULT_BACKEND    = 'redis://127.0.0.1:6379'
CELERY_ACCEPT_CONTENT    = ['application/json']
CELERY_TASK_SERIALIZER   = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TIMEZONE          = 'Asia/Tashkent'
